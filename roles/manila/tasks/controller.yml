- name: install packages
  tags: package
  package: name={{ item }} state=latest
  with_items:
    - openstack-manila
    - openstack-manila-ui
    - python-manilaclient

- name: install manila configuration
  tags: config
  template: src={{ item }}.j2 dest=/etc/manila/{{ item }}
  with_items:
    - manila.conf

- block:
  - name: copy db create template
    template: src=maniladb.sql.j2 dest=/tmp/maniladb.sql

  - name: create database
    shell : mysql -u root < /tmp/maniladb.sql

  - name: remove sql
    file: path=/tmp/maniladb.sql state=absent

  - name: list users
    command: "openstack user list"
    register: ulist

  - block:
      - command: "openstack user create --domain default --password {{ manila_password }} manila"
      - command: "openstack role add --project service --user manila admin"
      - command: "openstack service create --name manila --description 'OpenStack Shared File Systems' share"
      - command: "openstack service create --name manilav2 --description 'OpenStack Shared File Systems' sharev2"
      - command: "openstack endpoint create --region RegionOne share {{ item }} http://{{ internal_vip_address|default(groups['controller'][0]) }}:8786/v1/%(project_id)s"
        with_items:
          - internal
          - public
          - admin
      - command: "openstack endpoint create --region RegionOne sharev2 {{ item }} http://{{ internal_vip_address|default(groups['controller'][0]) }}:8786/v2/%(project_id)s"
        with_items:
          - internal
          - public
          - admin
    when: not ansible_check_mode and ulist.stdout.find("manila") < 0

  - name: run manila db sync
    command: manila-manage db sync
    become: true
    become_user: manila
    when: not ansible_check_mode
  run_once: true

- name: Create directory /var/lib/manila
  file:
    path: /var/lib/manila
    state: directory
    owner: manila
    group: manila
    mode: 0755

- name: start services
  tags: service
  service: name={{ item }} state=restarted enabled=yes
  when: not ansible_check_mode
  with_items:
    - openstack-manila-api
    - openstack-manila-scheduler

- wait_for: port=8786

- name: test manila api
  tags: test
  shell: manila service-list | grep '^| Id'
  run_once: true

- block:
  - name: get images list
    command: "openstack image list"
    register: imlist
    when: not ansible_check_mode

  - name: Check if file manila-service-image-master.qcow2 exists
    stat:
      path: /tmp/manila-service-image-master.qcow2
    register: manila_qcow2

  - block:
    - name: get manila-service-image image (its take too long time)
      get_url: 
        url: https://tarballs.openstack.org/manila-image-elements/images/manila-service-image-master.qcow2 
        dest: /tmp/manila-service-image-master.qcow2 
        timeout: 3600
      when: manila_qcow2.stat.exists == False
      register: get_manila_service_image
    
    - debug: 
        msg: "manila-service-image was downloaded"
      when: get_manila_service_image is changed

    - name: upload the image
      command: "openstack image create 'manila-service-image' --file /tmp/manila-service-image-master.qcow2 --disk-format qcow2 --container-format bare --public"
    when: not ansible_check_mode and imlist.stdout.find("manila-service-image") < 0

  - name: Create flavor to manila-service-image
    shell: openstack flavor create manila-service-flavor --id 100 --ram 256 --disk 0 --vcpus 1 --private
  
  - name: Creating default share type
    shell: manila type-create default_share_type True
  run_once: true

- name: test glance image
  tags: test
  shell: glance --os-image-url http://{{ ansible_default_ipv4['address'] }}:9292 image-list | grep '^| ID'